@import "mixins/transitions";

// -- Diary -- //
#diary {
  a.day {
    color: inherit;
    &:hover {text-decoration: underline;}
   }
  
  div.present h4, a.present h4, h4.present {
    margin-left: -5px;
    padding-left: 20px;
  }
  
  a.present h4, h4.present {
    background-color: $colour-highlight;
    color: $colour-background;
    will-change: box-shadow, transform;
  	@include transition(box-shadow);
  	box-shadow: map-get($shadows, 4);
  }
  
  div.present {
    box-shadow: map-get($shadows, 1);
    border-color: rgba($colour-highlight, 0.3) !important;
    a {
      &.day {
        padding: 0;
        &.present {
          will-change: box-shadow, transform;
          @include transition(box-shadow);
          &:hover {
            box-shadow: map-get($shadows, 6) !important;
            text-decoration: none !important;
          }
        }
      }
    }
  }
  
  div.focussed hr {border-top: 3px double $colour-general;}
  
  div.group {
    &.drop-target:not(.not-drop-target) {
      .row {background-color: $colour-bright-background;}
    }
  }
}

#kanban {
  div.card-body {
    &.drop-target:not(.not-drop-target) {
      background-color: rgba($colour-bright-background, 0.3);
    }
  }
}

.items-holder {
  div.group {
  	div.small {
      div.item {
        span > i, a > i {margin-top: 0.1rem !important;}
      }
    }  
  }
	div.item {
    will-change: padding-top, background-color;
    @include transition(padding-top 0.2s ease, background-color 0.6s linear);
    &.text-complement {color: complement($colour-highlight) !important;}
    &.drop-target:not(.not-drop-target) {padding-top: 1em !important;}
    &.due-soon > .display, &.overdue > .display {border-radius: 3px;}
    &.due-soon > .display {@include complex_LinearGradient(100grad,rgba($colour-warning, 0.2) rgba($colour-warning, 0.05) rgba($colour-warning, 0),0% 40% 100%);}
    &.overdue >  .display {@include complex_LinearGradient(100grad,rgba($colour-error, 0.2) rgba($colour-error, 0.05) rgba($colour-error, 0),0% 40% 100%);}
    &.editable {
      cursor: pointer;
      border-radius: 4px;
      &:hover {
        box-shadow: map-get($shadows, 2);
        border-bottom-color: transparent;
        background-color: rgba($colour-highlight, 0.4);
      }
      &.complete, &.background {
        &:hover {
        	background-color: rgba($colour-highlight, 0.1);
        }
      }
      &.background {
        &:hover {
        	box-shadow: map-get($shadows, 1);
        }
      }
    }
    &:not(:last-child) {border-bottom: 1px dashed $colour-emphasis};
    &:last-child {border-bottom: 1px solid transparent};
    &.small {
      border-bottom: none !important;
      p {
        margin: 1px 0 1px 0;
      }
      .material-icons.md-1 {
  			font-size: 0.8rem;
			}
      span > i, a > i {margin-top: 0.175rem !important;}
    }
    .text-faded {opacity: 0.5;}
    .text-very-faded {opacity: 0.25;}
    a.text-very-faded:hover {opacity: 0.75;}
    .loader {margin-top: 0.01rem !important;}
    p {
      margin: 0;
      padding: 0;
    }
    .date, .date span {
      &:hover {
        color: $colour-general;
        background-color: $colour-background-menu;
      }
    }
    .badge {
      a[href]:hover {color: $colour-emphasis;}
      a[href].close:hover {color: $colour-background;}
    }
    .display.small > a {margin-top: -0.15em;}
    svg {
      height: 1.4em;
    	width: 1.4em;
      
    }
    a.hover-dark:hover {color: $colour-general;}
  }
}

.icon.md-1 > svg {
  height: 0.8em;
  width: 0.8em;
}

div.item svg, .icon > svg {
  .e, .g {
      stroke-linecap: round;
      stroke: $colour-general;
    }
    .g {
      fill: $colour-background;
      stroke-width: 1em;
    }
    .e {
      fill: $colour-general;
      stroke-width: 0.1em;
    }
}

.action-menu {
  bottom: 0;
  right: 0;
  > button, > .dropdown-menu {z-index: 100;}
}
// -- Diary -- //